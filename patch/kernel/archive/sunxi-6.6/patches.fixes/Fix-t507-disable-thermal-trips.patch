From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: John Doe <john.doe@somewhere.on.planet>
Date: Tue, 27 Feb 2024 00:15:41 +0800
Subject: Disable thermal trips for now

Signed-off-by: John Doe <john.doe@somewhere.on.planet>
---
 drivers/thermal/thermal_core.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/drivers/thermal/thermal_core.c b/drivers/thermal/thermal_core.c
index dee302253..7c99fde98 100644
--- a/drivers/thermal/thermal_core.c
+++ b/drivers/thermal/thermal_core.c
@@ -311,40 +311,48 @@ static void handle_non_critical_trips(struct thermal_zone_device *tz, int trip)
 		       def_governor->throttle(tz, trip);
 }
 
 void thermal_zone_device_critical(struct thermal_zone_device *tz)
 {
+	return;
+#if 0	
 	/*
 	 * poweroff_delay_ms must be a carefully profiled positive value.
 	 * Its a must for forced_emergency_poweroff_work to be scheduled.
 	 */
 	int poweroff_delay_ms = CONFIG_THERMAL_EMERGENCY_POWEROFF_DELAY_MS;
 
 	dev_emerg(&tz->device, "%s: critical temperature reached, "
 		  "shutting down\n", tz->type);
 
 	hw_protection_shutdown("Temperature too high", poweroff_delay_ms);
+#endif	
 }
 EXPORT_SYMBOL(thermal_zone_device_critical);
 
 static void handle_critical_trips(struct thermal_zone_device *tz,
 				  int trip, int trip_temp, enum thermal_trip_type trip_type)
 {
+	return;
+#if 0	
 	/* If we have not crossed the trip_temp, we do not care. */
 	if (trip_temp <= 0 || tz->temperature < trip_temp)
 		return;
 
 	trace_thermal_zone_trip(tz, trip, trip_type);
 
 	if (trip_type == THERMAL_TRIP_HOT && tz->ops->hot)
 		tz->ops->hot(tz);
 	else if (trip_type == THERMAL_TRIP_CRITICAL)
 		tz->ops->critical(tz);
+#endif		
 }
 
 static void handle_thermal_trip(struct thermal_zone_device *tz, int trip_id)
 {
+	return;
+#if 0	
 	struct thermal_trip trip;
 
 	/* Ignore disabled trip points */
 	if (test_bit(trip_id, &tz->trips_disabled))
 		return;
@@ -367,10 +375,11 @@ static void handle_thermal_trip(struct thermal_zone_device *tz, int trip_id)
 
 	if (trip.type == THERMAL_TRIP_CRITICAL || trip.type == THERMAL_TRIP_HOT)
 		handle_critical_trips(tz, trip_id, trip.temperature, trip.type);
 	else
 		handle_non_critical_trips(tz, trip_id);
+#endif
 }
 
 static void update_temperature(struct thermal_zone_device *tz)
 {
 	int temp, ret;
-- 
Created with Armbian build tools https://github.com/armbian/build

